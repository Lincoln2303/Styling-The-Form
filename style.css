@import url('https://fonts.googleapis.com/css2?family=Muli&display=swap');

* {
    box-sizing: border-box;
}

body {
    background-color: steelblue;
    color: #fff ;
    font-family: 'Muli', sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    /* NOTE: We use "overflow" on hidden, because we don't want scroll bars to be shown by default */
    /* overflow: hidden; */
    margin: 0;
}

/* I.04. We're styling the container: */
.container {
    background-color: rgba(0, 0, 0, 0.4);
    padding: 20px 40px;
    border-radius: 5px;
}

/* I.05. We're styling h1: (NOTE: In container)  */
.container h1 {
    text-align: center;
    margin-bottom: 30px;
}

/* I.06. Styling the anchor tag: */
.container a {
    text-decoration: none;
    color: lightblue;
}

/* I.10. Adding styles to button: */
.btn {
    cursor: pointer;
    display: inline-block;
    width: 100%;
    background-color: lightblue;
    padding: 15px;
    font-family: inherit;
    font-size: 16px;
    border: 0;
    border-radius: 5px;
}

/* I.11. We set outline to 0 on .btn:focus: */
.btn:focus {
    outline: 0;
}

/* I.12. We also set a transform on .btn: (NOTE: When we click on it "active") */
.btn:active {
    transform: scale(0.98);
}

/* I.13. We also style the .text: */
/* AFTER: We move to section II. and adding some more styles here, then doing the js (section II.)  */
.text {
    margin-top: 30px; 
}

/* I.07. Styling the form-control: (NOTE: That wraps around the input and the labels) */
.form-control {
    position: relative;
    margin: 20px 0 40px;
    width: 300px ;
}

/* I.08. Then we're styling the input (within the form-control): */
.form-control input {
    background-color: transparent;
    border: 0;
    border-bottom: 2px solid #fff;
    /* NOTE: We want to have it inline, so we have to display "block" */
    display: block;
    width: 100%;
    padding: 15px 0;
    font-size: 18px;
    color: #fff;
}

/* I.09. Adding styles to input, when we have :focus on it: */
/* NOTE: Plus we add :valid as well => This way "we don't have that ugly border" */
.form-control input:focus,
.form-control input:valid {
    outline: 0;
    /* NOTE: We also set the border-bottom color to light blue (when we click on it) */
    border-bottom-color: lightblue;
}

/* II.01. We're styling .form-control label: (NOTE: email, and password) */
/* AFTER: We move to our javascipt (II.02.) */
.form-control label {
    /* NOTE: We set the position to absolute, because the .from-control itself is relative */
    position: absolute;
    top: 15px;
    left: 0;
}

/* II.08. Styling the span: */
.form-control label span {
    display: inline-block;
    font-size: 18px;
    min-width: 5px;
    /* II.11. We have to add the transition to the span: */
    /* NOTE: with cubec-bezier we define a curve, and we can use it as a transition effect with a variable speed */
    /* AFTER: We add the delay for each letter in javascript (II.12.) */
    transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* II.09. We're adding styles for the vawe  animation: */
/* NOTE: input:focus when we click on it, we want the direct label span (+ label span), and we also want the validation   */
.form-control input:focus + label span,
.form-control input:valid + label span {
    /* NOTE: When we click label turns in  to ligtblue   */
    color: lightblue;
    /* II.10. We want to move labels up, so we add a transition: (NOTE: with translateY) */
    transform: translateY(-30px);
}







